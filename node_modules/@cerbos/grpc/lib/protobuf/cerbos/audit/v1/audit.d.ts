import { CheckInput, CheckOutput, PlanResourcesInput, PlanResourcesOutput } from "../../../cerbos/engine/v1/engine";
import * as _m0 from "protobufjs/minimal";
export declare const protobufPackage = "cerbos.audit.v1";
export interface AccessLogEntry {
    callId: string;
    timestamp: Date | undefined;
    peer: Peer | undefined;
    metadata: {
        [key: string]: MetaValues;
    };
    method: string;
    statusCode: number;
}
export interface AccessLogEntry_MetadataEntry {
    key: string;
    value: MetaValues | undefined;
}
export interface DecisionLogEntry {
    callId: string;
    timestamp: Date | undefined;
    peer: Peer | undefined;
    /** Deprecated. Use method.check_resources.inputs instead. */
    inputs: CheckInput[];
    /** Deprecated. Use method.check_resources.outputs instead. */
    outputs: CheckOutput[];
    /** Deprecated. Use method.check_resources.error instead. */
    error: string;
    method?: {
        $case: "checkResources";
        checkResources: DecisionLogEntry_CheckResources;
    } | {
        $case: "planResources";
        planResources: DecisionLogEntry_PlanResources;
    };
}
export interface DecisionLogEntry_CheckResources {
    inputs: CheckInput[];
    outputs: CheckOutput[];
    error: string;
}
export interface DecisionLogEntry_PlanResources {
    input: PlanResourcesInput | undefined;
    output: PlanResourcesOutput | undefined;
    error: string;
}
export interface MetaValues {
    values: string[];
}
export interface Peer {
    address: string;
    authInfo: string;
    userAgent: string;
    forwardedFor: string;
}
export declare const AccessLogEntry: {
    encode(message: AccessLogEntry, writer?: _m0.Writer): _m0.Writer;
    decode(input: _m0.Reader | Uint8Array, length?: number): AccessLogEntry;
};
export declare const AccessLogEntry_MetadataEntry: {
    encode(message: AccessLogEntry_MetadataEntry, writer?: _m0.Writer): _m0.Writer;
    decode(input: _m0.Reader | Uint8Array, length?: number): AccessLogEntry_MetadataEntry;
};
export declare const DecisionLogEntry: {
    encode(message: DecisionLogEntry, writer?: _m0.Writer): _m0.Writer;
    decode(input: _m0.Reader | Uint8Array, length?: number): DecisionLogEntry;
};
export declare const DecisionLogEntry_CheckResources: {
    encode(message: DecisionLogEntry_CheckResources, writer?: _m0.Writer): _m0.Writer;
    decode(input: _m0.Reader | Uint8Array, length?: number): DecisionLogEntry_CheckResources;
};
export declare const DecisionLogEntry_PlanResources: {
    encode(message: DecisionLogEntry_PlanResources, writer?: _m0.Writer): _m0.Writer;
    decode(input: _m0.Reader | Uint8Array, length?: number): DecisionLogEntry_PlanResources;
};
export declare const MetaValues: {
    encode(message: MetaValues, writer?: _m0.Writer): _m0.Writer;
    decode(input: _m0.Reader | Uint8Array, length?: number): MetaValues;
};
export declare const Peer: {
    encode(message: Peer, writer?: _m0.Writer): _m0.Writer;
    decode(input: _m0.Reader | Uint8Array, length?: number): Peer;
};
//# sourceMappingURL=audit.d.ts.map