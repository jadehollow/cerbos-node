"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.planResourcesRequestToProtobuf = exports.checkResourcesRequestToProtobuf = void 0;
const uuid_1 = require("uuid");
const checkResourcesRequestToProtobuf = ({ principal, resources, auxData, includeMetadata = false, requestId = (0, uuid_1.v4)(), }) => ({
    principal: principalToProtobuf(principal),
    resources: resources.map(resourceCheckToProtobuf),
    auxData: auxData && auxDataToProtobuf(auxData),
    includeMeta: includeMetadata,
    requestId,
});
exports.checkResourcesRequestToProtobuf = checkResourcesRequestToProtobuf;
const principalToProtobuf = ({ id, roles, attributes = {}, policyVersion = "", scope = "", }) => ({
    id,
    roles,
    attr: attributes,
    policyVersion,
    scope,
});
const resourceCheckToProtobuf = ({ resource, actions, }) => ({
    resource: resourceToProtobuf(resource),
    actions,
});
const resourceToProtobuf = ({ kind, id, attributes = {}, policyVersion = "", scope = "", }) => ({
    kind,
    id,
    attr: attributes,
    policyVersion,
    scope,
});
const auxDataToProtobuf = ({ jwt }) => ({
    jwt: jwt && jwtToProtobuf(jwt),
});
const jwtToProtobuf = ({ token, keySetId = "" }) => ({
    token,
    keySetId,
});
const planResourcesRequestToProtobuf = ({ principal, resource, action, auxData, includeMetadata = false, requestId = (0, uuid_1.v4)(), }) => ({
    principal: principalToProtobuf(principal),
    resource: resourceQueryToProtobuf(resource),
    action,
    auxData: auxData && auxDataToProtobuf(auxData),
    includeMeta: includeMetadata,
    requestId,
});
exports.planResourcesRequestToProtobuf = planResourcesRequestToProtobuf;
const resourceQueryToProtobuf = ({ kind, attributes = {}, policyVersion = "", scope = "", }) => ({
    kind,
    attr: attributes,
    policyVersion,
    scope,
});
//# sourceMappingURL=toProtobuf.js.map